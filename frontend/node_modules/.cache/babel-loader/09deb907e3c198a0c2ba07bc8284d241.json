{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\src\\\\components\\\\SignIn\\\\SignInForm.js\";\nimport React, { Component } from 'react';\nimport { Form, FormGroup, ControlLabel, FormControl, HelpBlock, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport apiClient from '../../helpers/apiClient';\n\nvar SignInForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SignInForm, _Component);\n\n  function SignInForm(props) {\n    var _this;\n\n    _classCallCheck(this, SignInForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignInForm).call(this, props)); // formFieldInput : 해당 객체의 property에 사용자가 각 칸에 입력한 값들을 저장한다.\n    // formFieldValid : 각 칸에 입력된 값 (formFiledInput 객체의 properties)의 상태를 저장한다(null, error, warning etc)  \n    // formFieldMessage : 유효성 검사를 통과하지 못한 칸 아래에 나타낼 오류 메시지를 저장한다. \n\n    _this.state = {\n      formFieldInput: {\n        email: '',\n        password: ''\n      },\n      formFieldValid: {\n        emailValid: null,\n        passwordValid: null\n      },\n      formFieldMessage: {\n        emailValError: '',\n        passwordValError: ''\n      }\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SignInForm, [{\n    key: \"setValidationResult\",\n    value: function setValidationResult(validationResult) {\n      var _this$state = this.state,\n          formFieldValid = _this$state.formFieldValid,\n          formFieldMessage = _this$state.formFieldMessage;\n      formFieldValid[validationResult['fieldName'] + 'Valid'] = validationResult['isCorrect'];\n      formFieldMessage[validationResult['fieldName'] + 'ValError'] = validationResult['message'];\n      this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          formFieldValid: formFieldValid,\n          formFieldMessage: formFieldMessage\n        });\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      var name = e.target.name;\n      var value = e.target.value;\n      this.setState(function (prevState) {\n        return {\n          formFieldInput: _objectSpread({}, prevState.formFieldInput, _defineProperty({}, name, value))\n        };\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      var _this2 = this;\n\n      //you cannot return false to prevent default behavior in React. You must call preventDefault explicitly. \n      e.preventDefault();\n      var _this$state$formField = this.state.formFieldValid,\n          emailValid = _this$state$formField.emailValid,\n          passwordValid = _this$state$formField.passwordValid;\n      var _this$state$formField2 = this.state.formFieldInput,\n          email = _this$state$formField2.email,\n          password = _this$state$formField2.password;\n\n      if (emailValid === null && passwordValid === null) {\n        apiClient.post('/users/signin', {\n          email: email,\n          password: password\n        }).then(function (res) {\n          console.log(res.message);\n\n          _this2.props.history.push(res.url);\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      } else console.log('Submit conditions are not satisfied..');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"FormHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"\\uB85C\\uADF8\\uC778\"), React.createElement(FormGroup, {\n        validationState: this.state.formFieldValid.emailValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"\\uC544\\uC774\\uB514\"), React.createElement(FormControl, {\n        value: this.state.formFieldInput.email,\n        onChange: this.onChange,\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"\\uC774\\uBA54\\uC77C\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(HelpBlock, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.state.formFieldMessage.emailValError)), React.createElement(FormGroup, {\n        style: {\n          marginBottom: '50px'\n        },\n        validationState: this.state.formFieldValid.passwordValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), React.createElement(FormControl, {\n        value: this.state.formFieldInput.password,\n        onChange: this.onChange,\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"\\uD2B9\\uC218\\uBB38\\uC790 \\uD3EC\\uD568 \\uCD5C\\uC18C 8\\uC790 ~ \\uCD5C\\uB300 20\\uC790 \\uC774\\uB0B4\\uB85C \\uC785\\uB825\\uD569\\uB2C8\\uB2E4.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(HelpBlock, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, this.state.formFieldMessage.passwordValError)), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsStyle: \"primary\",\n        block: true,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"\\uD655\\uC778\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"removeLinkDec\",\n        href: \"http://localhost:8080/api/users/google_auth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          marginBottom: '15px'\n        },\n        bsStyle: \"danger\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"\\uAD6C\\uAE00 \\uACC4\\uC815\\uC73C\\uB85C \\uC2DC\\uC791\\uD558\\uAE30\")), React.createElement(\"a\", {\n        className: \"removeLinkDec\",\n        href: \"http://localhost:8080/api/users/naver_auth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          marginBottom: '15px'\n        },\n        bsStyle: \"success\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"\\uB124\\uC774\\uBC84 \\uACC4\\uC815\\uC73C\\uB85C \\uC2DC\\uC791\\uD558\\uAE30\"))));\n    }\n  }]);\n\n  return SignInForm;\n}(Component);\n\nSignInForm.propTypes = {\n  history: PropTypes.object.isRequired\n};\nexport default withRouter(SignInForm);","map":{"version":3,"sources":["C:\\Users\\82102\\Study_Hub\\Study_Project\\frontend\\src\\components\\SignIn\\SignInForm.js"],"names":["React","Component","Form","FormGroup","ControlLabel","FormControl","HelpBlock","Button","PropTypes","withRouter","apiClient","SignInForm","props","state","formFieldInput","email","password","formFieldValid","emailValid","passwordValid","formFieldMessage","emailValError","passwordValError","onChange","bind","onSubmit","validationResult","setState","prevState","e","name","target","value","preventDefault","post","then","res","console","log","message","history","push","url","catch","err","marginBottom","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { Form, FormGroup, ControlLabel, FormControl, HelpBlock, Button } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter} from 'react-router';\r\nimport apiClient from '../../helpers/apiClient';\r\n\r\nclass SignInForm extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    // formFieldInput : 해당 객체의 property에 사용자가 각 칸에 입력한 값들을 저장한다.\r\n    // formFieldValid : 각 칸에 입력된 값 (formFiledInput 객체의 properties)의 상태를 저장한다(null, error, warning etc)  \r\n    // formFieldMessage : 유효성 검사를 통과하지 못한 칸 아래에 나타낼 오류 메시지를 저장한다. \r\n    this.state = {\r\n      formFieldInput : \r\n      {\r\n        email: '',\r\n        password:'',\r\n      },\r\n      formFieldValid :\r\n      {\r\n        emailValid : null,\r\n        passwordValid : null,\r\n      },\r\n      formFieldMessage :\r\n      {\r\n        emailValError : '',\r\n        passwordValError : '',\r\n      }\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\nsetValidationResult (validationResult){\r\n  \r\n  let {formFieldValid, formFieldMessage} = this.state;\r\n\r\n  formFieldValid[validationResult['fieldName'] + 'Valid'] = validationResult['isCorrect'];\r\n  formFieldMessage[validationResult['fieldName'] + 'ValError'] = validationResult['message'];\r\n  \r\n  this.setState (\r\n    prevState => ({\r\n      ...prevState,\r\n      formFieldValid :  formFieldValid,\r\n      formFieldMessage : formFieldMessage\r\n    }))\r\n}\r\n\r\n  onChange(e){\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n  \r\n    this.setState(prevState =>({\r\n        formFieldInput:{\r\n            ...prevState.formFieldInput,\r\n            [name] : value\r\n        }\r\n    }));\r\n  }\r\n\r\n  onSubmit(e){\r\n    //you cannot return false to prevent default behavior in React. You must call preventDefault explicitly. \r\n    e.preventDefault();\r\n  \r\n    const {emailValid,passwordValid} = this.state.formFieldValid;\r\n    const {email,password} = this.state.formFieldInput;\r\n\r\n    if (emailValid === null && passwordValid === null) {\r\n      apiClient.post('/users/signin',{\r\n        email: email,\r\n        password: password,\r\n      })\r\n      .then(res => {\r\n        console.log(res.message)\r\n        this.props.history.push(res.url)\r\n      })\r\n      .catch(err=> console.log(err));\r\n    }\r\n    else\r\n      console.log('Submit conditions are not satisfied..');\r\n  }\r\n  \r\n  render (){\r\n    return (\r\n      <div>\r\n        <Form  onSubmit = {this.onSubmit}>\r\n        <h1 className = \"FormHeader\">로그인</h1>\r\n          <FormGroup\r\n            validationState = {this.state.formFieldValid.emailValid}\r\n          >\r\n            <ControlLabel>아이디</ControlLabel>\r\n              <FormControl\r\n                value = {this.state.formFieldInput.email}\r\n                onChange={this.onChange}\r\n                type = \"text\"\r\n                name=\"email\"\r\n                placeholder = \"이메일\">\r\n              </FormControl>\r\n              <FormControl.Feedback/>\r\n                <HelpBlock>{this.state.formFieldMessage.emailValError}</HelpBlock>\r\n              </FormGroup>\r\n            <FormGroup\r\n              style = {{marginBottom: '50px'}}\r\n              validationState = {this.state.formFieldValid.passwordValid}\r\n            >\r\n            <ControlLabel>비밀번호</ControlLabel>\r\n            <FormControl\r\n              value = {this.state.formFieldInput.password}\r\n              onChange={this.onChange}\r\n              type = \"password\"\r\n              name=\"password\"\r\n              placeholder=\"특수문자 포함 최소 8자 ~ 최대 20자 이내로 입력합니다.\">\r\n            </FormControl>\r\n            <FormControl.Feedback/>\r\n              <HelpBlock>{this.state.formFieldMessage.passwordValError}</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Button bsStyle=\"primary\" block type = \"submit\">\r\n                확인\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n          <div>\r\n            <a className = \"removeLinkDec\" href = \"http://localhost:8080/api/users/google_auth\"><Button style = {{marginBottom: '15px'}} bsStyle =\"danger\" block>구글 계정으로 시작하기</Button></a>\r\n            <a className = \"removeLinkDec\" href = \"http://localhost:8080/api/users/naver_auth\"><Button style = {{marginBottom: '15px'}} bsStyle =\"success\" block>네이버 계정으로 시작하기</Button></a>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nSignInForm.propTypes = {\r\n  history: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withRouter(SignInForm);"]},"metadata":{},"sourceType":"module"}