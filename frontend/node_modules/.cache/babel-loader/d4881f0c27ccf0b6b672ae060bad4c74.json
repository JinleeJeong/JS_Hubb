{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\src\\\\contexts\\\\appContext.js\";\nimport React, { Component, createContext } from 'react';\nimport apiClient from '../helpers/apiClient';\nimport socketIOClient from \"socket.io-client\";\nvar AppContext = createContext();\nvar Provider = AppContext.Provider;\n\nvar AppContextProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppContextProvider, _Component);\n\n  function AppContextProvider() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AppContextProvider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AppContextProvider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      //서울시청 초기화\n      lat: 37.5666035,\n      lng: 126.9783868,\n      // 현재 Login 상태에 대한 state \n      // status : false -> 로그인 x \n      // status : true -> 로그인 o\n      signInInfo: {\n        status: false,\n        id: '',\n        email: ''\n      },\n      // 소켓 Obj state \n      // io : null -> 소켓 연결 x \n      socketConnection: {\n        io: null\n      }\n    };\n    _this.actions = {\n      addContents: function addContents(formData) {\n        return apiClient.post('/contents', formData);\n      },\n      getContentsR1: function getContentsR1() {\n        return apiClient.get('/contents/r1');\n      },\n      getContentsR2: function getContentsR2() {\n        return apiClient.get('/contents/r2');\n      },\n      getContentsByCategory: function getContentsByCategory(searchTerm) {\n        return apiClient.get(\"/contents/context/\".concat(searchTerm));\n      },\n      //메인 검색창에서 카테고리 검색 시 데이터 보여줌\n      getContentsDetail: function getContentsDetail() {\n        return apiClient.get('/contents/detail/:id');\n      },\n      //상세내용 보여줌\n      getCurrentPosition: function getCurrentPosition() {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          return _this.setState({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          });\n        });\n      },\n      // 개발용/ 이후 간략하게 수정\n      checkAuth: function () {\n        var _checkAuth = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  return _context.abrupt(\"return\", apiClient.post('/users/checkAuth').then(function (res) {\n                    return {\n                      status: res.status,\n                      id: res.id,\n                      email: res.email\n                    };\n                  }).then(function (user) {\n                    console.log(user);\n                    var io = _this.state.socketConnection.io;\n                    var signInStatus = user.status;\n\n                    if (io || !signInStatus) {\n                      _this.setState(_objectSpread({}, _this.state, {\n                        signInInfo: {\n                          status: user.status,\n                          id: user.id,\n                          email: user.email\n                        }\n                      }));\n                    } else {\n                      io = socketIOClient('http://localhost:8080');\n\n                      _this.setState(_objectSpread({}, _this.state, {\n                        socketConnection: {\n                          io: io\n                        },\n                        signInInfo: {\n                          status: user.status,\n                          id: user.id,\n                          email: user.email\n                        }\n                      }));\n                    }\n                  }).catch(function (err) {\n                    return console.log(err);\n                  }));\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        function checkAuth() {\n          return _checkAuth.apply(this, arguments);\n        }\n\n        return checkAuth;\n      }()\n    };\n    return _this;\n  }\n\n  _createClass(AppContextProvider, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return React.createElement(Provider, {\n        value: {\n          state: this.state,\n          actions: this.actions\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, children);\n    }\n  }]);\n\n  return AppContextProvider;\n}(Component);\n\nexport { AppContextProvider as default };\nexport { AppContext };","map":{"version":3,"sources":["C:\\Users\\82102\\Study_Hub\\Study_Project\\frontend\\src\\contexts\\appContext.js"],"names":["React","Component","createContext","apiClient","socketIOClient","AppContext","Provider","AppContextProvider","state","lat","lng","signInInfo","status","id","email","socketConnection","io","actions","addContents","formData","post","getContentsR1","get","getContentsR2","getContentsByCategory","searchTerm","getContentsDetail","getCurrentPosition","navigator","geolocation","position","setState","coords","latitude","longitude","checkAuth","then","res","user","console","log","signInStatus","catch","err","children","props"],"mappings":"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","sourcesContent":["import React, { Component, createContext } from 'react';\r\nimport apiClient from '../helpers/apiClient';\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst AppContext = createContext();\r\nconst { Provider } = AppContext;\r\n\r\nexport default class AppContextProvider extends Component {\r\n  state = {\r\n    //서울시청 초기화\r\n    lat: 37.5666035,\r\n    lng: 126.9783868,\r\n\r\n    // 현재 Login 상태에 대한 state \r\n    // status : false -> 로그인 x \r\n    // status : true -> 로그인 o\r\n    signInInfo: {\r\n      status : false,\r\n      id: '',\r\n      email : ''\r\n    },\r\n\r\n    // 소켓 Obj state \r\n    // io : null -> 소켓 연결 x \r\n    socketConnection : {\r\n      io : null\r\n    }\r\n  }\r\n\r\n  actions = {\r\n    addContents: formData => apiClient.post('/contents', formData),\r\n    getContentsR1: () => apiClient.get('/contents/r1'),\r\n    getContentsR2: () => apiClient.get('/contents/r2'),\r\n    getContentsByCategory: searchTerm => apiClient.get(`/contents/context/${searchTerm}`), //메인 검색창에서 카테고리 검색 시 데이터 보여줌\r\n    getContentsDetail: () => apiClient.get('/contents/detail/:id'), //상세내용 보여줌\r\n    getCurrentPosition: () => {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        return this.setState({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        });\r\n      });\r\n    },\r\n\r\n    // 개발용/ 이후 간략하게 수정\r\n    checkAuth : async () => {\r\n      return apiClient.post('/users/checkAuth')\r\n        .then(res => ({status: res.status, id: res.id, email: res.email}))\r\n        .then(user => {\r\n          console.log(user);\r\n          let io = this.state.socketConnection.io;\r\n          const signInStatus = user.status;\r\n\r\n          if (io || !signInStatus){\r\n            this.setState({\r\n              ...this.state,\r\n              signInInfo: {\r\n                status: user.status,\r\n                id : user.id,\r\n                email: user.email}\r\n            })\r\n          }\r\n          else{\r\n            io =  socketIOClient('http://localhost:8080');\r\n\r\n            this.setState({\r\n              ...this.state,\r\n              socketConnection:{io: io},\r\n              signInInfo: {\r\n                status: user.status,\r\n                id : user.id,\r\n                email: user.email}\r\n            })\r\n          }\r\n        })\r\n        .catch(err=> console.log(err)); \r\n  }\r\n\r\n    \r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return(\r\n      <Provider value={{ state: this.state, actions: this.actions }}>{ children }</Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport {\r\n  AppContext,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}