{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\src\\\\components\\\\UIElements\\\\Main.js\";\nimport React, { Component, Fragment } from 'react';\nimport './Main.css';\nimport SearchInput, { createFilter } from 'react-search-input';\nimport movie from '../../images/movie.mp4';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../../contexts/appContext';\nvar KEYS_TO_FILTERS = ['title'];\n\nvar Main =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Main, _Component);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this, props));\n    _this.state = {\n      users: [],\n      contents: [],\n      searchTerm: ''\n    };\n    _this.searchUpdated = _this.searchUpdated.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = this;\n                _context.next = 3;\n                return this.context.actions.getContentsR2();\n\n              case 3:\n                _context.t1 = _context.sent;\n                _context.t2 = {\n                  contents: _context.t1\n                };\n\n                _context.t0.setState.call(_context.t0, _context.t2);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"searchUpdated\",\n    value: function searchUpdated(term) {\n      // if(term === ''){\n      //   this.setState({searchTerm : 'ForExample'})\n      // }\n      // else {\n      //   this.setState({searchTerm : term})\n      // }\n      this.setState({\n        searchTerm: term\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var filter = this.state.contents.filter(createFilter(this.state.searchTerm, KEYS_TO_FILTERS));\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"background_video\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        loop: true,\n        muted: this.props.muted,\n        autoPlay: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        type: \"video/mp4\",\n        \"data-reactid\": \".0.1.0.0.0\",\n        src: movie,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"background_search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"background_search_Text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(SearchInput, {\n        className: \"searchInput\",\n        onChange: this.searchUpdated,\n        placeholder: \"Search Category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: \"/category/\" + this.state.searchTerm + \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"glyphicon glyphicon-search\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })))))), React.createElement(\"section\", {\n        className: \"infomad\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"info_cate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"info_category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \" \", React.createElement(\"div\", {\n        className: \"info_search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"\\uC815\\uB82C \\uAE30\\uC900 : Hot Topic \\u2160\"), this.state.contents.map(function (board, index) {\n        if (index < 3) {\n          return React.createElement(\"div\", {\n            className: \"info_divide\",\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            className: \"info_button\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"info_named\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: \"http://localhost:8080/\" + board.imageUrl,\n            alt: \"Testing\",\n            width: \"70%\",\n            height: \"auto\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }))), React.createElement(\"div\", {\n            className: \"info_titles\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, board.title), React.createElement(\"div\", {\n            className: \"info_category\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, board.category));\n        } else return console.log('end');\n      })), React.createElement(\"div\", {\n        className: \"info_category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \" \", React.createElement(\"div\", {\n        className: \"info_search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"\\uC815\\uB82C \\uAE30\\uC900 : Hot Topic \\u2161 \"), this.state.contents.map(function (board, index) {\n        if (index < 3) {\n          return React.createElement(\"div\", {\n            className: \"info_divide\",\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            className: \"info_button\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"info_named\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: \"http://localhost:8080/\" + board.imageUrl,\n            alt: \"Testing\",\n            width: \"70%\",\n            height: \"auto\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }))), React.createElement(\"div\", {\n            className: \"info_title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, board.title), React.createElement(\"div\", {\n            className: \"info_description\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, board.description), React.createElement(\"div\", {\n            className: \"info_category\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, board.category));\n        } else return console.log('end');\n      })))))), React.createElement(\"div\", {\n        className: \"other_info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nMain.contextType = AppContext;\nexport default Main;","map":{"version":3,"sources":["C:\\Users\\82102\\Study_Hub\\Study_Project\\frontend\\src\\components\\UIElements\\Main.js"],"names":["React","Component","Fragment","SearchInput","createFilter","movie","Link","AppContext","KEYS_TO_FILTERS","Main","props","state","users","contents","searchTerm","searchUpdated","bind","context","actions","getContentsR2","setState","term","filter","muted","map","board","index","imageUrl","title","category","console","log","description","contextType"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport './Main.css';\r\nimport SearchInput, { createFilter } from 'react-search-input';\r\nimport movie from '../../images/movie.mp4'\r\nimport {Link} from 'react-router-dom';\r\nimport { AppContext } from '../../contexts/appContext';\r\n\r\n\r\nconst KEYS_TO_FILTERS = ['title']\r\n\r\nclass Main extends Component {\r\n  static contextType = AppContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      contents: [],\r\n      searchTerm: ''\r\n    }\r\n    this.searchUpdated = this.searchUpdated.bind(this)\r\n  }\r\n\r\n  async componentDidMount() {\r\n    \r\n    // 진리님 코드재서님꺼 합치면 작업\r\n    // axios.get('http://localhost:8080/api/user')\r\n    // .then(res => {\r\n    //   this.setState({ \r\n    //     users: res.data,      \r\n    //   });\r\n    //   // console.log(this.state.users);\r\n    // });\r\n    // 진리님 코드\r\n    // axios.get('http://localhost:8080/api/contents/r2')\r\n    // .then(res => {\r\n    //   this.setState({\r\n    //     contents : res.data,\r\n    //   });\r\n    //   console.log(this.state.contents);\r\n    // });\r\n    this.setState({\r\n      contents: await this.context.actions.getContentsR2(),\r\n    })\r\n  };\r\n\r\n  searchUpdated (term) {\r\n    // if(term === ''){\r\n    //   this.setState({searchTerm : 'ForExample'})\r\n    // }\r\n    // else {\r\n    //   this.setState({searchTerm : term})\r\n    // }\r\n    this.setState({searchTerm: term})\r\n  }\r\n  \r\n  \r\n  render() {\r\n    const filter = this.state.contents.filter(createFilter(this.state.searchTerm, KEYS_TO_FILTERS));\r\n  \r\n    return (\r\n      <Fragment>\r\n        <div className=\"_container\">\r\n          <section className=\"background\">\r\n            <div className=\"background_video\">\r\n                <video loop muted={this.props.muted} autoPlay={true}>\r\n                    <source type=\"video/mp4\" data-reactid=\".0.1.0.0.0\" src={movie} />\r\n                </video>\r\n                \r\n              <div className=\"background_search\">\r\n                <div className=\"background_search_Text\">\r\n                <SearchInput className=\"searchInput\" onChange={this.searchUpdated} placeholder=\"Search Category\" />\r\n                  <Link to={`/category/`+this.state.searchTerm+`/`}>\r\n                  <span className=\"glyphicon glyphicon-search\" aria-hidden=\"true\" ></span>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n          </section>\r\n          <section className=\"infomad\">\r\n            <div>\r\n              <div>\r\n                \r\n                <div className=\"info_cate\"> \r\n\r\n                      <div className = \"info_category\"> <div className=\"info_search\">정렬 기준 : Hot Topic Ⅰ</div>\r\n                        {this.state.contents.map((board, index) => \r\n                          { \r\n                            if(index < 3){\r\n                            return (\r\n                              <div className = \"info_divide\" key={index}>\r\n                                \r\n                                <button className=\"info_button\"><div className =\"info_named\"><img src ={`http://localhost:8080/`+board.imageUrl} alt =\"Testing\" width =\"70%\" height=\"auto\"/></div></button>\r\n                                <div className =\"info_titles\">{board.title}</div>\r\n                                {/* <div className =\"info_description\">{board.description}</div> */}\r\n                                <div className =\"info_category\">{board.category}</div>\r\n                              </div>\r\n                          )\r\n                          } else return console.log('end');\r\n                          })\r\n                        } \r\n                      </div>\r\n\r\n                      <div className = \"info_category\"> <div className=\"info_search\">정렬 기준 : Hot Topic Ⅱ </div>\r\n                        {this.state.contents.map((board, index) => \r\n                          { \r\n                            if(index < 3){\r\n                            return (\r\n                              <div className = \"info_divide\" key={index}>\r\n                                \r\n                                <button className=\"info_button\"><div className =\"info_named\"><img src ={`http://localhost:8080/`+board.imageUrl} alt =\"Testing\" width =\"70%\" height=\"auto\"/></div></button>\r\n                                <div className =\"info_title\">{board.title}</div>\r\n                                <div className =\"info_description\">{board.description}</div>\r\n                                <div className =\"info_category\">{board.category}</div>\r\n                              </div>\r\n                          )\r\n                          } else return console.log('end');\r\n                          })} \r\n\r\n                      </div>\r\n\r\n                    \r\n                </div>                        \r\n              </div>\r\n            </div>\r\n          </section>\r\n          <div className =\"other_info\"></div>\r\n        </div>\r\n        <div>\r\n      </div>\r\n      \r\n      </Fragment>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}