{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\src\\\\components\\\\contents\\\\ContentsController.js\";\nimport React, { Component } from 'react';\nimport { FormGroup, ControlLabel, FormControl, ButtonGroup, Button } from 'react-bootstrap';\nimport { AppContext } from '../../contexts/appContext';\nimport queryString from 'query-string';\n/* global naver */\n\nvar ContentsController =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContentsController, _Component);\n\n  function ContentsController() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContentsController);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContentsController)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: '',\n      category: [],\n      description: '',\n      addresses: [],\n      selectedLocation: '' //확인 버튼 클릭시 formData 초기화 후 context addContents에 formData 전달하여 호출\n\n    };\n\n    _this.addContents =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this$state, title, category, description, studyLocation, coverImg, dataInObject, formData;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _this$state = _this.state, title = _this$state.title, category = _this$state.category, description = _this$state.description, studyLocation = _this$state.selectedLocation;\n                coverImg = document.getElementById('coverImg').files[0];\n                dataInObject = {\n                  title: title,\n                  category: category,\n                  description: description,\n                  studyLocation: studyLocation,\n                  coverImg: coverImg\n                };\n                formData = new FormData();\n                Object.keys(dataInObject).map(function (key) {\n                  return formData.append(key, dataInObject[key]);\n                });\n                _context.next = 8;\n                return _this.context.actions.addContents(formData);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.getAddresses = function (latlng) {\n      var tm128 = naver.maps.TransCoord.fromLatLngToTM128(latlng);\n      return new Promise(function (resolve, reject) {\n        naver.maps.Service.reverseGeocode({\n          location: tm128,\n          coordType: naver.maps.Service.CoordType.TM128\n        }, function (status, response) {\n          if (status === naver.maps.Service.Status.ERROR) {\n            return reject(alert('지도 API 오류입니다.'));\n          }\n\n          ;\n          var items = response.result.items;\n          var addresses = [];\n\n          for (var i = 0, ii = items.length, item; i < ii; i++) {\n            item = items[i];\n            addresses.push(item.address);\n          }\n\n          ;\n          return resolve(addresses);\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ContentsController, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var currentPosition, currentLatLng, map, marker;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                currentPosition = queryString.parse(this.props.location.search);\n                currentLatLng = new naver.maps.LatLng(currentPosition.lat, currentPosition.lng);\n                _context3.t0 = this;\n                _context3.next = 5;\n                return this.getAddresses(currentLatLng);\n\n              case 5:\n                _context3.t1 = _context3.sent;\n                _context3.t2 = {\n                  addresses: _context3.t1\n                };\n\n                _context3.t0.setState.call(_context3.t0, _context3.t2);\n\n                map = new naver.maps.Map('naverMap', {\n                  center: currentLatLng,\n                  zoom: 10\n                });\n                marker = new naver.maps.Marker({\n                  position: currentLatLng,\n                  map: map\n                });\n                naver.maps.Event.addListener(map, 'click',\n                /*#__PURE__*/\n                function () {\n                  var _ref2 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee2(e) {\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            marker.setPosition(e.latlng);\n                            _context2.t0 = _this2;\n                            _context2.next = 4;\n                            return _this2.getAddresses(e.latlng);\n\n                          case 4:\n                            _context2.t1 = _context2.sent;\n                            _context2.t2 = {\n                              addresses: _context2.t1\n                            };\n\n                            _context2.t0.setState.call(_context2.t0, _context2.t2);\n\n                          case 7:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2, this);\n                  }));\n\n                  return function (_x2) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-4 col-md-offset-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"FormHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"\\uC2A4\\uD130\\uB514 \\uC791\\uC131 \\uD398\\uC774\\uC9C0\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"\\uC81C\\uBAA9\"), React.createElement(FormControl, {\n        type: \"text\",\n        name: \"title\",\n        onChange: function onChange(e) {\n          _this3.setState({\n            title: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"\\uBD84\\uB958 \\uC120\\uD0DD\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick(e) {\n          _this3.setState({\n            category: [].concat(_toConsumableArray(_this3.state.category), [e.target.value])\n          });\n        },\n        name: \"category\",\n        value: \"\\uC601\\uC5B4 \\uD68C\\uD654\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"\\uC601\\uC5B4 \\uD68C\\uD654\"), React.createElement(Button, {\n        onClick: function onClick(e) {\n          _this3.setState({\n            category: [].concat(_toConsumableArray(_this3.state.category), [e.target.value])\n          });\n        },\n        name: \"category\",\n        value: \"\\uC790\\uC18C\\uC11C\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"\\uC790\\uC18C\\uC11C\"), React.createElement(Button, {\n        onClick: function onClick(e) {\n          _this3.setState({\n            category: [].concat(_toConsumableArray(_this3.state.category), [e.target.value])\n          });\n        },\n        name: \"category\",\n        value: \"\\uBA74\\uC811\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"\\uBA74\\uC811\"), React.createElement(Button, {\n        onClick: function onClick(e) {\n          _this3.setState({\n            category: [].concat(_toConsumableArray(_this3.state.category), [e.target.value])\n          });\n        },\n        name: \"category\",\n        value: \"\\uC54C\\uACE0\\uB9AC\\uC998\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"\\uC54C\\uACE0\\uB9AC\\uC998\"), React.createElement(Button, {\n        onClick: function onClick(e) {\n          _this3.setState({\n            category: [].concat(_toConsumableArray(_this3.state.category), [e.target.value])\n          });\n        },\n        name: \"category\",\n        value: \"\\uD504\\uB85C\\uC81D\\uD2B8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"\\uD504\\uB85C\\uC81D\\uD2B8\"))), React.createElement(FormGroup, {\n        controlId: \"formControlsSelect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"\\uC8FC\\uC18C \\uC120\\uD0DD\"), React.createElement(\"div\", {\n        id: \"naverMap\",\n        style: {\n          width: '100%',\n          height: '400px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        componentClass: \"select\",\n        onChange: function onChange(e) {\n          _this3.setState({\n            selectedLocation: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"\\uC8FC\\uC18C \\uC120\\uD0DD\"), this.state.addresses.map(function (address, index) {\n        return React.createElement(\"option\", {\n          value: address,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, address);\n      }))), React.createElement(FormGroup, {\n        controlId: \"formControlsTextarea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"\\uC2A4\\uD130\\uB514 \\uC124\\uBA85\"), React.createElement(FormControl, {\n        name: \"description\",\n        componentClass: \"textarea\",\n        onChange: function onChange(e) {\n          _this3.setState({\n            description: e.target.value\n          });\n        },\n        placeholder: \"\\uC2A4\\uD130\\uB514 \\uC124\\uBA85/\\uBAA8\\uC784 \\uC2DC\\uAC04 \\uB4F1\\uC744 \\uC801\\uC5B4\\uC8FC\\uC138\\uC694.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"\\uCEE4\\uBC84 \\uC774\\uBBF8\\uC9C0\"), React.createElement(\"input\", {\n        type: \"file\",\n        id: \"coverImg\",\n        multiple: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })), React.createElement(Button, {\n        bsStyle: \"primary\",\n        block: true,\n        type: \"submit\",\n        onClick: this.addContents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"\\uD655\\uC778\"))));\n    }\n  }]);\n\n  return ContentsController;\n}(Component);\n\nContentsController.contextType = AppContext;\nexport default ContentsController;","map":{"version":3,"sources":["C:\\Users\\82102\\Study_Hub\\Study_Project\\frontend\\src\\components\\contents\\ContentsController.js"],"names":["React","Component","FormGroup","ControlLabel","FormControl","ButtonGroup","Button","AppContext","queryString","ContentsController","state","title","category","description","addresses","selectedLocation","addContents","e","preventDefault","studyLocation","coverImg","document","getElementById","files","dataInObject","formData","FormData","Object","keys","map","key","append","context","actions","getAddresses","latlng","tm128","naver","maps","TransCoord","fromLatLngToTM128","Promise","resolve","reject","Service","reverseGeocode","location","coordType","CoordType","TM128","status","response","Status","ERROR","alert","items","result","i","ii","length","item","push","address","currentPosition","parse","props","search","currentLatLng","LatLng","lat","lng","setState","Map","center","zoom","marker","Marker","position","Event","addListener","setPosition","target","value","width","height","index","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormGroup, ControlLabel, FormControl, ButtonGroup, Button } from 'react-bootstrap';\r\nimport { AppContext } from '../../contexts/appContext';\r\nimport queryString from 'query-string';\r\n\r\n/* global naver */\r\n\r\nclass ContentsController extends Component {\r\n  static contextType = AppContext;\r\n\r\n  state = {\r\n    title: '',\r\n    category: [],\r\n    description: '',\r\n    addresses: [],\r\n    selectedLocation: '',\r\n  }\r\n  \r\n  //확인 버튼 클릭시 formData 초기화 후 context addContents에 formData 전달하여 호출\r\n  addContents = async (e) => {\r\n    e.preventDefault();\r\n    const { title, category, description, selectedLocation: studyLocation } = this.state;\r\n    const coverImg = document.getElementById('coverImg').files[0];\r\n    const dataInObject = {\r\n      title,\r\n      category,\r\n      description,\r\n      studyLocation,\r\n      coverImg,\r\n    };\r\n    const formData = new FormData();\r\n\r\n    Object.keys(dataInObject).map((key) => {\r\n      return formData.append(key, dataInObject[key]);\r\n    });\r\n\r\n    await this.context.actions.addContents(formData);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const currentPosition = queryString.parse(this.props.location.search);\r\n    const currentLatLng = new naver.maps.LatLng(currentPosition.lat, currentPosition.lng);\r\n    \r\n    this.setState({\r\n      addresses: await this.getAddresses(currentLatLng),\r\n    });\r\n\r\n    const map = new naver.maps.Map('naverMap', {\r\n      center: currentLatLng,\r\n      zoom: 10\r\n    });\r\n    const marker = new naver.maps.Marker({\r\n      position: currentLatLng,\r\n      map: map,\r\n    });\r\n    naver.maps.Event.addListener(map, 'click', async (e) => {\r\n      marker.setPosition(e.latlng);\r\n      this.setState({\r\n        addresses: await this.getAddresses(e.latlng),\r\n      });\r\n    });\r\n  };\r\n\r\n  getAddresses = (latlng) => {\r\n    const tm128 = naver.maps.TransCoord.fromLatLngToTM128(latlng);\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      naver.maps.Service.reverseGeocode({\r\n        location: tm128,\r\n        coordType: naver.maps.Service.CoordType.TM128\r\n      },(status, response) => {\r\n          if (status === naver.maps.Service.Status.ERROR) {\r\n            return reject(alert('지도 API 오류입니다.'));\r\n          };\r\n  \r\n          const { items } = response.result;\r\n          const addresses = [];\r\n\r\n          for (let i=0, ii=items.length, item; i<ii; i++) {\r\n            item = items[i];\r\n            addresses.push(item.address);\r\n          };\r\n          return resolve(addresses);\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className = \"row\">\r\n        <div className = \"col-md-4 col-md-offset-4\">\r\n          <h1 className = \"FormHeader\">스터디 작성 페이지</h1>\r\n          <form>\r\n            <FormGroup>\r\n              <ControlLabel>제목</ControlLabel>\r\n              <FormControl\r\n                type = \"text\"\r\n                name=\"title\"\r\n                onChange={(e) => { this.setState({ title: e.target.value})}}\r\n              >\r\n              </FormControl>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <ControlLabel>분류 선택</ControlLabel><br />\r\n              <ButtonGroup>\r\n                <Button onClick={(e) => { this.setState({ category: [...this.state.category, e.target.value] })}} name=\"category\" value=\"영어 회화\">영어 회화</Button>\r\n                <Button onClick={(e) => { this.setState({ category: [...this.state.category, e.target.value] })}} name=\"category\" value=\"자소서\">자소서</Button>\r\n                <Button onClick={(e) => { this.setState({ category: [...this.state.category, e.target.value] })}} name=\"category\" value=\"면접\">면접</Button>\r\n                <Button onClick={(e) => { this.setState({ category: [...this.state.category, e.target.value] })}} name=\"category\" value=\"알고리즘\">알고리즘</Button>\r\n                <Button onClick={(e) => { this.setState({ category: [...this.state.category, e.target.value] })}} name=\"category\" value=\"프로젝트\">프로젝트</Button>\r\n              </ButtonGroup>\r\n            </FormGroup>\r\n\r\n            <FormGroup controlId=\"formControlsSelect\">\r\n              <ControlLabel>주소 선택</ControlLabel>\r\n              <div id=\"naverMap\" style={{ width:'100%', height:'400px'}} />\r\n              <FormControl \r\n                componentClass=\"select\" \r\n                onChange={(e) => { this.setState({ selectedLocation: e.target.value }) }}\r\n              >\r\n              <option>주소 선택</option>\r\n              {this.state.addresses.map((address, index) => {\r\n                return <option value={address} key={index}>{address}</option>\r\n              })}\r\n              </FormControl>\r\n            </FormGroup>\r\n            \r\n            <FormGroup controlId=\"formControlsTextarea\">\r\n              <ControlLabel>스터디 설명</ControlLabel>\r\n              <FormControl \r\n                name=\"description\" \r\n                componentClass=\"textarea\"\r\n                onChange={(e) => { this.setState({ description: e.target.value})}} \r\n                placeholder=\"스터디 설명/모임 시간 등을 적어주세요.\" />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <ControlLabel>커버 이미지</ControlLabel>\r\n                <input type=\"file\" id=\"coverImg\" multiple/>\r\n              </FormGroup>\r\n\r\n            <Button bsStyle=\"primary\" block type = \"submit\" onClick={this.addContents}>\r\n              확인\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContentsController;"]},"metadata":{},"sourceType":"module"}