{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\82102\\\\Study_Hub\\\\Study_Project\\\\frontend\\\\src\\\\components\\\\UIElements\\\\Templates.js\";\nimport React, { Component, Fragment } from 'react';\nimport movie from '../../images/movie.mp4';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nvar styles = function styles(theme) {\n  return {\n    appBar: {\n      position: 'relative'\n    },\n    icon: {\n      marginRight: theme.spacing.unit * 2\n    },\n    heroUnit: {\n      backgroundColor: theme.palette.background.paper\n    },\n    heroContent: {\n      maxWidth: 600,\n      margin: '0 auto',\n      padding: \"\".concat(theme.spacing.unit * 8, \"px 0 \").concat(theme.spacing.unit * 6, \"px\")\n    },\n    heroButtons: {\n      marginTop: theme.spacing.unit * 4\n    },\n    layout: _defineProperty({\n      width: 'auto',\n      marginLeft: theme.spacing.unit * 3,\n      marginRight: theme.spacing.unit * 3\n    }, theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2), {\n      width: 1100,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }),\n    cardGrid: {\n      padding: \"\".concat(theme.spacing.unit * 8, \"px 0\")\n    },\n    card: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    cardMedia: {\n      paddingTop: '56.25%' // 16:9\n\n    },\n    cardContent: {\n      flexGrow: 1\n    },\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing.unit * 6\n    }\n  };\n}; // class Templates extends Component {\n//     static contextType = AppContext;\n//     constructor(props) {\n//       super(props);\n//       this.state = {\n//         users: [],\n//         contents: [],\n//         searchTerm: '',\n//         value: 0\n//       }\n//       this.searchUpdated = this.searchUpdated.bind(this);\n//       this.buttonClicked = this.buttonClicked.bind(this);\n//     }\n//     buttonClicked(e) {\n//       this.setState({value: this.state.value+1});\n//     }\n//     shouldComponentUpdate(nextProps, nextState) {\n//       return this.state.value === nextState.value || this.state.searchTerm === nextState.searchTerm;\n//     }\n//     async componentDidMount() {  \n//       this.context.actions.checkAuth();\n//       // 진리님 코드, 재서님꺼 합치면 http://localhost:8080/api/user추가\n//       // axios.get('http://localhost:8080/api/user')\n//       // .then(res => {\n//       //   this.setState({ \n//       //     users: res.data,      \n//       //   });\n//       //   // console.log(this.state.users);\n//       // });\n//       // axios.get('http://localhost:8080/api/contents/r1')\n//       // .then(res => {\n//       //   this.setState({\n//       //     contents : res.data,\n//       //   });\n//       //   console.log(this.state.contents);\n//       // });\n//       this.context.actions.getCurrentPosition();\n//       // 더하기\n//       // this.setState({\n//       //   contents: await this.context.actions.getContentsR1(),\n//       // });\n//     };\n//     searchUpdated (term) {\n//       // if(term === ''){\n//       //   this.setState({searchTerm : 'ForExample'})\n//       // }\n//       // else {\n//       //   this.setState({searchTerm : term})\n//       // }\n//       this.setState({searchTerm: term})\n//     }\n//     render() {\n//       const filter = this.state.contents.filter(createFilter(this.state.searchTerm, KEYS_TO_FILTERS));\n//       const { lat, lng } = this.context.state;\n//       return (\n//         <Fragment>\n//           <div className=\"_container\">\n//             <section className=\"background\">\n//               <div className=\"background_video\">\n//                   <video loop muted={this.props.muted} autoPlay={true}>\n//                       <source type=\"video/mp4\" data-reactid=\".0.1.0.0.0\" src={movie} />\n//                   </video>\n//                     <Link to={`/write?lat=${lat}&lng=${lng}`}><Button variant=\"contained\" color=\"primary\">스터디 시작하기</Button></Link>\n//                 <div className=\"background_search\">\n//                   <div className=\"background_search_Text\">\n//                   <SearchInput className=\"searchInput\" onChange={this.searchUpdated} placeholder=\"Search Category\" />\n//                     <Link to={`/category/`+this.state.searchTerm+`/`}>\n//                     <span className=\"glyphicon glyphicon-search\" aria-hidden=\"true\" ></span>\n//                     </Link>\n//                   </div>\n//                 </div>\n//               </div>\n//             </section>\n//             <section className=\"infomad\">\n//               <div>\n//                 <div>\n//                   <div className=\"info_cate\"> \n//                         <div className = \"info_category\"> <div className=\"info_search\">정렬 기준 : 현재 모집 중</div>\n//                           {this.state.contents.map((board, index) => \n//                             { \n//                               if(index < 3){\n//                               return (\n//                                 <div className = \"info_divide\" key={index}>\n//                                   <button className=\"info_button\" onClick={this.buttonClicked}><div className =\"info_named\"><img src ={`http://localhost:8080/`+board.imageUrl} alt =\"Testing\" width =\"70%\" height=\"auto\"/></div></button>\n//                                   <div className =\"info_title\">{board.title}</div>\n//                                   {/* <div className =\"info_description\">{board.description}</div> */}\n//                                   <div className =\"info_category\">{board.category}</div>\n//                                 </div>\n//                             )\n//                             } else return console.log('First');\n//                             })\n//                           } \n//                         </div>\n//                         <div className = \"info_category\"> <div className=\"info_search\">정렬 기준 : 관심 카테고리 Ⅰ</div>\n//                           {this.state.contents.map((board, index) => \n//                             { \n//                               if(index < 3){\n//                               return (\n//                                 <div className = \"info_divide\" key={index}>\n//                                   <button className=\"info_button\" onClick={()=>{\n//                                     let path = `detail/`+board._id;\n//                                     this.props.history.push(path);\n//                                   }}><div className =\"info_named\"><img src ={`http://localhost:8080/`+board.imageUrl} alt =\"Testing\" width =\"70%\" height=\"auto\"/></div></button>\n//                                   <div className =\"info_title\">{board.title}</div>\n//                                   {/* <div className =\"info_description\">{board.description}</div> */}\n//                                   <div className =\"info_category\">{board.category}</div>\n//                                 </div>\n//                             )\n//                             } else return console.log('Second');\n//                             })} \n//                         </div>\n//                         <div className = \"info_category\"> <div className=\"info_search\">정렬 기준 : 관심 카테고리 Ⅱ</div>\n//                           {this.state.contents.map((board, index) => \n//                             { \n//                               if(index < 3){\n//                               return (\n//                                 <div className = \"info_divide\" key={index}>\n//                                   <button className=\"info_button\"><div className =\"info_named\"><img src ={`http://localhost:8080/`+board.imageUrl} alt =\"Testing\" width =\"70%\" height=\"auto\"/></div></button>\n//                                   <div className =\"info_title\">{board.title}</div>\n//                                   <div className =\"info_description\">{board.description}</div>\n//                                   <div className =\"info_category\">{board.category}</div>\n//                                 </div>\n//                             )\n//                             } else return console.log('Third');\n//                             })} \n//                         </div>\n//                   </div>                        \n//                 </div>\n//               </div>\n//             </section>\n//             <div className =\"other_info\"></div>\n//           </div>\n//           <div>\n//         </div>\n//         </Fragment>\n//       )\n//     }\n//   }\n// export default Templates;\n\n\nvar cards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction Album(props) {\n  var classes = props.classes;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.heroUnit,\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.heroContent,\n    style: {\n      maxWidth: \"1500px\",\n      height: \"6vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    loop: true,\n    autoPlay: true,\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(\"source\", {\n    type: \"video/mp4\",\n    \"data-reactid\": \".0.1.0.0.0\",\n    src: movie,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.heroButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 16,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, \"Main call to action\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, \"Secondary action\")))))), React.createElement(\"div\", {\n    className: classNames(classes.layout, classes.cardGrid),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, cards.map(function (card) {\n    return React.createElement(Grid, {\n      item: true,\n      key: card,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      className: classes.cardMedia,\n      image: \"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22288%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20288%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_164edaf95ee%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_164edaf95ee%22%3E%3Crect%20width%3D%22288%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2296.32500076293945%22%20y%3D%22118.8%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\" // eslint-disable-line max-len\n      ,\n      title: \"Image title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      className: classes.cardContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Heading\"), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"This is a media card. You can use this section to describe the content.\")), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"View\"), React.createElement(Button, {\n      size: \"small\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Edit\"))));\n  })))));\n}\n\nAlbum.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Album);","map":{"version":3,"sources":["C:\\Users\\82102\\Study_Hub\\Study_Project\\frontend\\src\\components\\UIElements\\Templates.js"],"names":["React","Component","Fragment","movie","PropTypes","classNames","AppBar","Button","CameraIcon","Card","CardActions","CardContent","CardMedia","CssBaseline","Grid","Toolbar","Typography","withStyles","styles","theme","appBar","position","icon","marginRight","spacing","unit","heroUnit","backgroundColor","palette","background","paper","heroContent","maxWidth","margin","padding","heroButtons","marginTop","layout","width","marginLeft","breakpoints","up","cardGrid","card","height","display","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","footer","cards","Album","props","classes","textAlign","map","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport movie from '../../images/movie.mp4';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => (\r\n    {\r\n      appBar: {\r\n        position: 'relative',\r\n      },\r\n      icon: {\r\n        marginRight: theme.spacing.unit * 2,\r\n      },\r\n      heroUnit: {\r\n        backgroundColor: theme.palette.background.paper,\r\n      },\r\n      heroContent: {\r\n        maxWidth: 600,\r\n        margin: '0 auto',\r\n        padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`,\r\n      },\r\n      heroButtons: {\r\n        marginTop: theme.spacing.unit * 4,\r\n      },\r\n      layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing.unit * 3,\r\n        marginRight: theme.spacing.unit * 3,\r\n        [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n          width: 1100,\r\n          marginLeft: 'auto',\r\n          marginRight: 'auto',\r\n        },\r\n      },\r\n      cardGrid: {\r\n        padding: `${theme.spacing.unit * 8}px 0`,\r\n      },\r\n      card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      },\r\n      cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n      },\r\n      cardContent: {\r\n        flexGrow: 1,\r\n      },\r\n      footer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing.unit * 6,\r\n      },\r\n    });\r\n// class Templates extends Component {\r\n//     static contextType = AppContext;\r\n    \r\n//     constructor(props) {\r\n//       super(props);\r\n      \r\n//       this.state = {\r\n//         users: [],\r\n//         contents: [],\r\n//         searchTerm: '',\r\n//         value: 0\r\n//       }\r\n      \r\n//       this.searchUpdated = this.searchUpdated.bind(this);\r\n//       this.buttonClicked = this.buttonClicked.bind(this);\r\n//     }\r\n  \r\n//     buttonClicked(e) {\r\n//       this.setState({value: this.state.value+1});\r\n//     }\r\n//     shouldComponentUpdate(nextProps, nextState) {\r\n//       return this.state.value === nextState.value || this.state.searchTerm === nextState.searchTerm;\r\n//     }\r\n    \r\n//     async componentDidMount() {  \r\n//       this.context.actions.checkAuth();\r\n  \r\n//       // 진리님 코드, 재서님꺼 합치면 http://localhost:8080/api/user추가\r\n//       // axios.get('http://localhost:8080/api/user')\r\n//       // .then(res => {\r\n//       //   this.setState({ \r\n//       //     users: res.data,      \r\n//       //   });\r\n//       //   // console.log(this.state.users);\r\n//       // });\r\n  \r\n//       // axios.get('http://localhost:8080/api/contents/r1')\r\n//       // .then(res => {\r\n//       //   this.setState({\r\n//       //     contents : res.data,\r\n//       //   });\r\n//       //   console.log(this.state.contents);\r\n//       // });\r\n  \r\n//       this.context.actions.getCurrentPosition();\r\n      \r\n//       // 더하기\r\n  \r\n      \r\n//       // this.setState({\r\n//       //   contents: await this.context.actions.getContentsR1(),\r\n//       // });\r\n//     };\r\n  \r\n//     searchUpdated (term) {\r\n//       // if(term === ''){\r\n//       //   this.setState({searchTerm : 'ForExample'})\r\n//       // }\r\n//       // else {\r\n//       //   this.setState({searchTerm : term})\r\n//       // }\r\n//       this.setState({searchTerm: term})\r\n//     }\r\n    \r\n    \r\n//     render() {\r\n//       const filter = this.state.contents.filter(createFilter(this.state.searchTerm, KEYS_TO_FILTERS));\r\n//       const { lat, lng } = this.context.state;\r\n  \r\n//       return (\r\n//         <Fragment>\r\n          \r\n//           <div className=\"_container\">\r\n//             <section className=\"background\">\r\n//               <div className=\"background_video\">\r\n//                   <video loop muted={this.props.muted} autoPlay={true}>\r\n//                       <source type=\"video/mp4\" data-reactid=\".0.1.0.0.0\" src={movie} />\r\n//                   </video>\r\n                    \r\n//                     <Link to={`/write?lat=${lat}&lng=${lng}`}><Button variant=\"contained\" color=\"primary\">스터디 시작하기</Button></Link>\r\n                  \r\n//                 <div className=\"background_search\">\r\n//                   <div className=\"background_search_Text\">\r\n//                   <SearchInput className=\"searchInput\" onChange={this.searchUpdated} placeholder=\"Search Category\" />\r\n//                     <Link to={`/category/`+this.state.searchTerm+`/`}>\r\n//                     <span className=\"glyphicon glyphicon-search\" aria-hidden=\"true\" ></span>\r\n//                     </Link>\r\n//                   </div>\r\n//                 </div>\r\n//               </div>\r\n//             </section>\r\n//             <section className=\"infomad\">\r\n//               <div>\r\n//                 <div>\r\n//                   <div className=\"info_cate\"> \r\n  \r\n//                         <div className = \"info_category\"> <div className=\"info_search\">정렬 기준 : 현재 모집 중</div>\r\n//                           {this.state.contents.map((board, index) => \r\n//                             { \r\n//                               if(index < 3){\r\n//                               return (\r\n//                                 <div className = \"info_divide\" key={index}>\r\n                                  \r\n//                                   <button className=\"info_button\" onClick={this.buttonClicked}><div className =\"info_named\"><img src ={`http://localhost:8080/`+board.imageUrl} alt =\"Testing\" width =\"70%\" height=\"auto\"/></div></button>\r\n//                                   <div className =\"info_title\">{board.title}</div>\r\n//                                   {/* <div className =\"info_description\">{board.description}</div> */}\r\n//                                   <div className =\"info_category\">{board.category}</div>\r\n//                                 </div>\r\n//                             )\r\n//                             } else return console.log('First');\r\n//                             })\r\n//                           } \r\n//                         </div>\r\n  \r\n//                         <div className = \"info_category\"> <div className=\"info_search\">정렬 기준 : 관심 카테고리 Ⅰ</div>\r\n//                           {this.state.contents.map((board, index) => \r\n//                             { \r\n//                               if(index < 3){\r\n//                               return (\r\n//                                 <div className = \"info_divide\" key={index}>\r\n//                                   <button className=\"info_button\" onClick={()=>{\r\n//                                     let path = `detail/`+board._id;\r\n//                                     this.props.history.push(path);\r\n  \r\n//                                   }}><div className =\"info_named\"><img src ={`http://localhost:8080/`+board.imageUrl} alt =\"Testing\" width =\"70%\" height=\"auto\"/></div></button>\r\n//                                   <div className =\"info_title\">{board.title}</div>\r\n//                                   {/* <div className =\"info_description\">{board.description}</div> */}\r\n//                                   <div className =\"info_category\">{board.category}</div>\r\n//                                 </div>\r\n//                             )\r\n//                             } else return console.log('Second');\r\n//                             })} \r\n//                         </div>\r\n  \r\n//                         <div className = \"info_category\"> <div className=\"info_search\">정렬 기준 : 관심 카테고리 Ⅱ</div>\r\n//                           {this.state.contents.map((board, index) => \r\n//                             { \r\n//                               if(index < 3){\r\n//                               return (\r\n//                                 <div className = \"info_divide\" key={index}>\r\n                                  \r\n//                                   <button className=\"info_button\"><div className =\"info_named\"><img src ={`http://localhost:8080/`+board.imageUrl} alt =\"Testing\" width =\"70%\" height=\"auto\"/></div></button>\r\n//                                   <div className =\"info_title\">{board.title}</div>\r\n//                                   <div className =\"info_description\">{board.description}</div>\r\n//                                   <div className =\"info_category\">{board.category}</div>\r\n//                                 </div>\r\n//                             )\r\n//                             } else return console.log('Third');\r\n//                             })} \r\n  \r\n//                         </div>\r\n//                   </div>                        \r\n//                 </div>\r\n//               </div>\r\n//             </section>\r\n//             <div className =\"other_info\"></div>\r\n//           </div>\r\n//           <div>\r\n//         </div>\r\n        \r\n//         </Fragment>\r\n//       )\r\n//     }\r\n//   }\r\n// export default Templates;\r\n\r\n\r\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\nfunction Album(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n      \r\n    <Fragment>\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroUnit} style={{textAlign:\"center\"}}>\r\n          <div className={classes.heroContent} style={{maxWidth:\"1500px\", height:\"6vh\"}}>\r\n                <video loop autoPlay={true} style={{width:\"100%\"}}>\r\n                    <source type=\"video/mp4\" data-reactid=\".0.1.0.0.0\" src={movie} />\r\n                </video>\r\n            <div className={classes.heroButtons}>\r\n              <Grid container spacing={16} justify=\"center\">\r\n                <Grid item>\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    Main call to action\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button variant=\"outlined\" color=\"primary\">\r\n                    Secondary action\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={classNames(classes.layout, classes.cardGrid)}>\r\n          {/* End hero unit */}\r\n          <Grid container spacing={40}>\r\n            {cards.map(card => (\r\n              <Grid item key={card} sm={6} md={4} lg={3}>\r\n                <Card className={classes.card}>\r\n                  <CardMedia\r\n                    className={classes.cardMedia}\r\n                    image=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22288%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20288%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_164edaf95ee%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_164edaf95ee%22%3E%3Crect%20width%3D%22288%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2296.32500076293945%22%20y%3D%22118.8%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\" // eslint-disable-line max-len\r\n                    title=\"Image title\"\r\n                  />\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      Heading\r\n                    </Typography>\r\n                    <Typography>\r\n                      This is a media card. You can use this section to describe the content.\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                      View\r\n                    </Button>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                      Edit\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n      </main>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nAlbum.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Album);"]},"metadata":{},"sourceType":"module"}